document.addEventListener("DOMContentLoaded",(function(){const e=window.location.hash.replace("#","").replace("/","");let t,o={};const n=io("",{query:{role:"playerList",id:e}}),l=(e,t)=>{const o="index";let n=0;return e[o]<t[o]?n=-1:e[o]>t[o]&&(n=1),n},s=()=>{$("#insertion").html("no players to render")},a=()=>{let e=!0,t="";if((e=>{const t={};for(const o in e){const n=e[o];if(n.isLead){const e=n.teamObj.abbr;if(t[e])return!0;t[e]=!0}}return!1})(o)&&(e=!1,t+="duplicate team leads! "),((e,t)=>{const o=new Set;for(const n in e){const l=e[n][t];if(o.has(l))return!0;o.add(l)}return!1})(o,"id")&&(e=!1,t+="duplicate IDs! "),(e=>{let t=!1,o=[];for(const n in e)2===e[n].teamObj.type&&e[n].isLead&&(t=!0,o.push(n));return{hasLeads:t,pvLeads:o}})(o).pvLead&&(e=!1,t+="PV team lead(s) exist! "),e){const e=(new Date).toUTCString();t=`<p>${Object.values(o).length} players checked, all OK (${e})</p>`}$("#insertion").append(t)},i=e=>{$.isEmptyObject(e)?s():(console.log(e),console.log(o),JSON.stringify(e)!==JSON.stringify(o)?(console.log("mismatch"),clearTimeout(t),t=setTimeout((()=>{o=e,(()=>{if($.isEmptyObject(o))s();else{let e='<table id="players">';const t=Object.values(o);t.sort(l),t.forEach((t=>{e+="<tr>",e+=`<td>${t.index}</td>`,e+=`<td>${t.id}</td>`,e+=`<td>${t.connected}</td>`,e+=`<td>${t.teamObj.title}</td>`,e+=`<td>${t.isLead}</td>`,e+=`<td>${t.isFake}</td>`,e+="</tr>"})),e+="</table>",$("#insertion").html(e)}})(),a()}),1e3)):console.log("match"))};n.emit("getGame",e,(t=>{console.log(e),console.log(t),t&&(console.log("got",t.playersFull),i(t.playersFull))})),n.on("gameUpdate",(e=>{console.log("heard",e.playersFull),i(e.playersFull)}))}));
