document.addEventListener("DOMContentLoaded",(function(){const e=window.location.hash.replace("#","");let t,n={};const o=io("",{query:{role:"playerList",id:e}}),s=(e,t)=>{const n="index";let o=0;return e[n]<t[n]?o=-1:e[n]>t[n]&&(o=1),o},l=()=>{$("#insertion").html("no players to render")},a=()=>{let e=!0,t="";if((e=>{const t={};for(const n in e){const o=e[n];if(o.isLead){const e=o.teamObj.abbr;if(t[e])return!0;t[e]=!0}}return!1})(n)&&(e=!1,t+="duplicate team leads! "),((e,t)=>{const n=new Set;for(const o in e){const s=e[o][t];if(n.has(s))return!0;n.add(s)}return!1})(n,"id")&&(e=!1,t+="duplicate IDs! "),(e=>{let t=!1,n=[];for(const o in e)2===e[o].teamObj.type&&e[o].isLead&&(t=!0,n.push(o));return{hasLeads:t,pvLeads:n}})(n).pvLead&&(e=!1,t+="PV team lead(s) exist! "),e){const e=(new Date).toUTCString();t=`<p>${Object.values(n).length} players checked, all OK (${e})</p>`}$("#insertion").append(t)},i=e=>{$.isEmptyObject(e)?l():(console.log(e),console.log(n),JSON.stringify(e)!==JSON.stringify(n)?(console.log("mismatch"),clearTimeout(t),t=setTimeout((()=>{n=e,(()=>{if($.isEmptyObject(n))l();else{let e='<table id="players">';const t=Object.values(n);t.sort(s),t.forEach((t=>{e+="<tr>",e+=`<td>${t.index}</td>`,e+=`<td>${t.id}</td>`,e+=`<td>${t.connected}</td>`,e+=`<td>${t.teamObj.title}</td>`,e+=`<td>${t.isLead}</td>`,e+=`<td>${t.isFake}</td>`,e+="</tr>"})),e+="</table>",$("#insertion").html(e)}})(),a()}),1e3)):console.log("match"))};o.emit("getGame",e,(e=>{console.log("got",e.playersFull),i(e.playersFull)})),o.on("gameUpdate",(e=>{console.log("heard",e.playersFull),i(e.playersFull)}))}));
