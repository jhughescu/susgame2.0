document.addEventListener("DOMContentLoaded",(function(){const e=window.location.hash.replace("#",""),s=io("",{query:{role:"adminsessiondisplay",id:e}});$("#logs");$("#logDetail");let o=null,n=null;const a=e=>{const s=n.persistentData.teamsArray,o=n.players,a=(e.values,{session:e,game:n});let t=e.scores.slice(0).map((e=>window.unpackScore(e)));t=t.map((e=>({...e,team:s[e.dest].title}))),t=t.map((e=>({...e,src:s[e.src].title}))),t=t.map((e=>({...e,client:o[e.client]}))),t=t.map((e=>({...e,value:s[e.dest].id}))),a.session.scorePackets=t,console.log(t),console.log(a),console.log(a.session.scorePackets),window.renderTemplate("logs","admin.session.display",{session:e,game:n},(()=>{$("html, body").animate({scrollTop:$(document).height()},1e3)}))},t=e=>{window.renderTemplate("logs","error",{message:e||"game must be specified as URL hash, e.g. ..updatelog#game-6tsu"})},i=()=>{var e;Boolean(window.location.hash)?o=window.location.hash.replace("#","/"):t(),null!==o&&(e=()=>{o?(t("tried and nearly succeeded"),s.emit("getSession",o,(e=>{a(e)}))):t("tried and failed")},s.emit("getGame",o,(s=>{n=s,e()})))};window.addEventListener("hashchange",(function(){i()}),!1),s.on("onSessionUpdated",(e=>{a(e)})),i()}));
